// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  // output   = "../generated/prisma"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model Product {
  id          String          @id @default(uuid())
  name        String
  barcode     String          @unique
  imageUrl    String?
  minQuantity Int
  supplier    Supplier?       @relation(fields: [supplierId], references: [id])
  supplierId  String?
  movements   StockMovement[]
  createdAt   DateTime        @default(now())
}

model Supplier {
  id            String          @id @default(uuid())
  name          String
  cnpj          String?
  address       String?
  products      Product[]
  StockMovement StockMovement[]
}

model StockMovement {
  id         String    @id @default(uuid())
  type       StockType
  quantity   Int
  reason     String
  product    Product   @relation(fields: [productId], references: [id])
  productId  String
  user       User      @relation(fields: [userId], references: [id])
  userId     String
  supplier   Supplier? @relation(fields: [supplierId], references: [id])
  supplierId String?
  createdAt  DateTime  @default(now())
}

enum Role {
  admin
  operator
}

enum StockType {
  entry
  exit
}

model User {
  id           String          @id @default(uuid())
  name         String
  email        String          @unique
  passwordHash String
  role         Role
  movements    StockMovement[]
}
